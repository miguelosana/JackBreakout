
class Ball {
	field int x,xSpeed;
	field int y, ySpeed;
	field int falling,left;
	field boolean onScreen;
	field int nextX,nextY ;


	constructor Ball new( int randomX ){
		let x = randomX;
		let y = 150;
		let ySpeed = 1; //low initial falling speed
		let xSpeed = 2;
		let falling = 1;
		let left = 0;

		return this;
	}

	method int getX(){
		return x;
	}
	

	method int getY(){
		return y;
	}

	method void increaseXSpeed(int v){
		if((xSpeed +v ) <10){
			let xSpeed = xSpeed +v;
			}
			return;
	}

	method void increaseYSpeed(int v){
		if((ySpeed +v )<10){
			let ySpeed  = ySpeed +v;
		}
		return;
	}

	/* Changes the vertical direction when hitting an object */
	method void toggleFalling(){
		if(falling=1){
			let falling = 0;
			if (ySpeed = 1){
				let ySpeed =2;
			}
		}else{
			let falling = 1;
		}
		return ;
	}

	/* Changes the horizontal direction when hitting an object */	
	method void toggleLeft(){
		if(left =1){
			let left =0;
			}else{
			let left =1;
			}
			return;
	}
	

	method boolean draw(Array paddleCoords){
		do Screen.setColor(false);
		do Screen.drawCircle(x, y,5);
		let onScreen = true;
		if((((y - ySpeed) -5)< 0) & (falling=0)){
		let	falling=1;
		}

		//check if paddle hit
		/* Paddles is hit when ball is falling and between the x coordinates of the paddle and the next position will be lower than the y coordinate */
		if((falling =1) & (((y+ySpeed)+5) > paddleCoords[1]) & ((x > paddleCoords[0]) & (x < paddleCoords[2]))){
			let falling=0;
			do increaseYSpeed(0); //change to increase speed on a paddle hit
			//add some friction
			if(paddleCoords[4] = 1){
				let x = x - 5;
			}
			if(paddleCoords[4] = 2){
				let x = x + 5;
			}
		}


		//check if leaving playArea at bottom
		if((((y+ySpeed)+5) > 255 )& falling=1){
			let onScreen=false;
			return onScreen;
		}

		//check if hitting a wall (and bounce back)	
		if(((x + xSpeed) +5) > 507){
			let left = 0;
		}
		if(((x - xSpeed) -5) < 0){
			let left = 1;
		}

		//set new coordinates
		if(left =1){
			let x = x + xSpeed;
		}else{
			let x = x - xSpeed;
		}
		if(falling=1){
			let y = y +ySpeed;

		}else{
			let y = y- ySpeed;
		}

		do Screen.setColor(true);
		do Screen.drawCircle(x, y,5);
		return onScreen;
	}

	method void dispose(){
		do Memory.deAlloc(this);
		return;
	}



}
